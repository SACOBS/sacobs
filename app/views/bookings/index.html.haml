.page-header
  %h2
    Bookings

.search.pull-right
  = simple_form_for :q, url: bookings_path, defaults: { required: false, label: false }, html: {class: 'form-inline',method: :get} do |f|
    = f.input :created_at_date_eq, as: :date_picker, placeholder: 'Search booking dates'
    = f.input :reference_no_or_status_or_trip_name_or_client_full_name_cont, placeholder: 'Search', input_html: { class: 'search-query' }
    = f.submit 'Search', class: t('buttons.mini.warning')
    = link_to 'Clear', bookings_path, class: t('buttons.mini.inverse'), icon: :times

- cache(cache_key_for_collection(@bookings, build_cache_key_from_ransack_search(@q))) do


  #myOtherSkinnedTabWrapper
    %ul.nav.nav-tabs
      %li.active
        %a{href: '#reserved', data: {toggle: :tab} }
          Reserved
          %span.badge.badge-info #{reserved_bookings.total_count}
      %li
        %a{href: '#standby',  data: {toggle: :tab}}
          Standby
          %span.badge.badge-warning #{standby_bookings.total_count}
      %li
        %a{href: '#paid',  data: {toggle: :tab}}
          Paid
          %span.badge.badge-success #{paid_bookings.total_count}
      %li
        %a{href: '#cancelled',  data: {toggle: :tab}}
          Cancelled
          %span.badge.badge-important #{cancelled_bookings.total_count}

    .tab-content
      .tab-pane.active{id: :reserved}
        = paginate reserved_bookings, param_name: :reserved_page
        - if reserved_bookings.any?
          - bootstrap_table headers:['Client','Trip Date','Qty','From','To','Status','Booking Date', 'Expires In' ,'Expiry Date' ,'Actions'], types: [:bordered, :striped, :condensed], html_options: {class: 'sortable'} do
            = render reserved_bookings
        - else
          %h3 There are currently 0 reserved bookings.
        = paginate reserved_bookings, param_name: :reserved_page
      .tab-pane{id: :standby}
        = paginate standby_bookings, param_name: :standby_page
        - if standby_bookings.any?
          - bootstrap_table headers:['Client','Trip Date','Qty','From','To','Status','Booking Date', 'Expires In' ,'Expiry Date' ,'Actions'], types: [:bordered, :striped, :condensed], html_options: {class: 'sortable'} do
            = render standby_bookings
        - else
          %h3 There are currently 0 standby bookings.
        = paginate standby_bookings, param_name: :standby_page
      .tab-pane{id: :paid}
        = paginate paid_bookings, param_name: :paid_page
        - if paid_bookings.any?
          - bootstrap_table headers:['Client','Trip Date','Qty','From','To','Status','Booking Date', 'Expires In' ,'Expiry Date' ,'Actions'], types: [:bordered, :striped, :condensed], html_options: {class: 'sortable'} do
            = render paid_bookings
        - else
          %h3 There are currently 0 paid bookings.
        = paginate paid_bookings, param_name: :paid_page
      .tab-pane{id: :cancelled}
        = paginate cancelled_bookings, param_name: :cancelled_page
        - if cancelled_bookings.any?
          - bootstrap_table headers:['Client','Trip Date','Qty','From','To','Status','Booking Date', 'Expires In' ,'Expiry Date' ,'Actions'], types: [:bordered, :striped, :condensed], html_options: {class: 'sortable'} do
            = render cancelled_bookings
        - else
          %h3 There are currently 0 cancelled bookings.
        = paginate cancelled_bookings, param_name: :cancelled_page


  %br
  = link_to 'Make Booking', bookings_path, method: :post, icon: :plus, class: t('buttons.primary')
  = link_to 'Refresh', bookings_path, class: t('buttons.default'), icon: :refresh

